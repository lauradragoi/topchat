<project name="TopChatServer" default="run" basedir=".">
	<description>
        Build file ${ant.project.name}
    </description>

	<!-- Directories -->
	<property name="src.dir" 			location="src"/>
	<property name="bin.dir" 			location="bin"/>
	<property name="lib.dir" 			location="lib"/>
	<property name="dist.dir" 			location="dist"/>
	<property name="config.dir" 		location="config"/>
	<property name="config_dumber.dir" 	location="config_dumber"/>
	<property name="doc.dir"			location="doc"/>
	<property name="tests.dir"			location="tests"/>
	
	<!-- Libraries -->
	<property name="log4j.lib" 			value="log4j-1.2.15.jar"/>
	<property name="junit.lib" 			value="junit-4.6.jar"/>		
	<property name="connectorj.lib"		value="mysql-connector-java-5.1.7-bin.jar" />
	<property name="smack.lib" 			value="smack.jar"/>
	<property name="smackx.lib" 		value="smackx.jar"/>	
	
	<property name="jar.name"			value="TopChatServer.jar" />
	<property name="main.class"			value="topchat.server.core.TopChatServer" />
	<property name="dumb.client.name" 	value="topchat.server.dummyclient.DumbClient"/>
	<property name="dumber.client.name" 	value="topchat.server.dummyclient.DumberClient"/>
	
	<target name="init" depends="clean">
		<mkdir dir="${bin.dir}"/>
	</target>

	<target name="compile" depends="init" description="compile the source " >
		<!-- Compile the java code from ${src} into ${bin} -->
		<echo message="Compiling..." />
		<javac srcdir="${src.dir}" destdir="${bin.dir}">
			<classpath>
				<pathelement location="${lib.dir}/${log4j.lib}"/>
				<pathelement location="${lib.dir}/${junit.lib}"/>
				<pathelement location="${lib.dir}/${smack.lib}"/>
				<pathelement location="${lib.dir}/${smackx.lib}"/>			
				<pathelement location="${lib.dir}/${connectorj.lib}"/>						
				<pathelement path="${java.class.path}"/>
			</classpath>
		</javac>
		<echo message="Compile finished." />
	</target>

	<target name="jar" depends="compile" description="package the program">
		<mkdir dir="dist"/>
		<jar destfile="${dist.dir}/${jar.name}" basedir="${bin.dir}">
			<manifest>
				<attribute name="Main-Class" value="${main.class}"/>
			</manifest>			
			<zipfileset src="${lib.dir}/${log4j.lib}" />
			<zipfileset src="${lib.dir}/${junit.lib}" />
			<zipfileset src="${lib.dir}/${smack.lib}" />
			<zipfileset src="${lib.dir}/${smackx.lib}" />
			<zipfileset src="${lib.dir}/${connectorj.lib}"/>	
			<zipfileset dir="${config.dir}" />
	    </jar>
	</target>

    <target name="run_jar" description="run the packaged program">
        <java jar="dist/TopChatServer.jar" fork="true"/>
    </target>
	
	<target name="run" depends="compile" description="run the program" >
		<!-- Run the program in a VM different from the VM ant is running in -->
		<echo message="Runnning ${ant.project.name}..." />
		<java classname="${main.class}"  fork="true">
			<classpath>
				<pathelement location="${bin.dir}"/>
				<pathelement location="${lib.dir}/${log4j.lib}"/>
				<pathelement location="${lib.dir}/${smack.lib}"/>
				<pathelement location="${lib.dir}/${connectorj.lib}"/>	
				<pathelement location="${config.dir}"/>
				<pathelement path="${java.class.path}"/>
			</classpath>
		</java>
		<echo message="Finished." />
	</target>
	
	<target name="run_client" depends="" description="run the dumb client" >
		<!-- Run the program in a VM different from the VM ant is running in -->
		<echo message="Runnning client..." />
		<java classname="${dumb.client.name}"  fork="true">
			<classpath>
				<pathelement location="${bin.dir}"/>
				<pathelement location="${lib.dir}/${log4j.lib}"/>
				<pathelement location="${lib.dir}/${smack.lib}"/>
				<pathelement location="${lib.dir}/${smackx.lib}"/>
				<pathelement location="${config.dir}"/>
				<pathelement path="${java.class.path}"/>
			</classpath>
		</java>
		<echo message="Finished." />
	</target>	

	<target name="run_client2" depends="" description="run the dumber client" >
		<!-- Run the program in a VM different from the VM ant is running in -->
		<echo message="Runnning client..." />
		<java classname="${dumber.client.name}"  fork="true">
			<classpath>
				<pathelement location="${bin.dir}"/>
				<pathelement location="${lib.dir}/${log4j.lib}"/>
				<pathelement location="${lib.dir}/${smack.lib}"/>
				<pathelement location="${lib.dir}/${smackx.lib}"/>
				<pathelement location="${config_dumber.dir}"/>
				<pathelement path="${java.class.path}"/>
			</classpath>
			<arg line="${user} ${pass}"/>
		</java>
		<echo message="Finished." />
	</target>		
	
	<target name="test" depends="compile" description="Run JUnit tests">
		<!-- Run defined tests -->
		<mkdir dir="${tests.dir}" />
		<junit haltonfailure="false" haltonerror="false" printsummary="withOutAndErr">
			<classpath>
				<pathelement location="${lib.dir}/${log4j.lib}" />		
				<pathelement location="${config.dir}" />
				<pathelement location="${lib.dir}/${junit.lib}" />
				<pathelement location="${bin.dir}" />
				<pathelement path="${java.class.path}" />
			</classpath>
			<batchtest todir="${tests.dir}">
				<fileset dir="${src.dir}" includes="**/*Test*.java"/>
			</batchtest>
			<formatter type="xml" />
		</junit>
		<junitreport todir="${tests.dir}">
			<fileset dir="${tests.dir}" includes="TEST-*.xml"/>
			<report format="frames" todir="${tests.dir}"/>
		</junitreport>
	</target>

	<target name="javadoc" description="creates the javadoc">
		<!-- Generate javadoc -->		
		<echo message="Generating the javadoc..." />
		<javadoc
	           destdir="${doc.dir}/${ant.project.name}"
	           author="true"
	  		   Private="true"
	           version="true"
	           use="true"
	           windowtitle="${ant.project.name} doc">
			<fileset dir="src" defaultexcludes="yes" />
			<classpath>
				<pathelement location="${lib.dir}/${log4j.lib}" />
				<pathelement location="${lib.dir}/${junit.lib}" />
				<pathelement location="${lib.dir}/${smack.lib}" />
				<pathelement location="${lib.dir}/${smackx.lib}" />
				<pathelement path="${java.class.path}"/>				
			</classpath>
		</javadoc>
	</target>

	<target name="clean" description="clean up" >
		<!-- Remove class files -->
		<echo message="Cleaning up..." />
		<delete dir="${bin.dir}"/>
		<echo message="Clean up finished." />
	</target>
		
</project>